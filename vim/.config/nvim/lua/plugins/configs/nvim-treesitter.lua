return {
  "nvim-treesitter/nvim-treesitter",
  cmd = {
    "TSInstall", "TSBufEnable", "TSBufDisable", "TSModuleInfo"
  },
  build = ":TSUpdate",
  opts = {
    ensure_installed = {
      "awk",
      "bash",
      "bibtex",
      "c",
      "cmake",
      "comment",
      "cpp",
      "css",
      "csv",
      "cuda",
      "dart",
      "devicetree",
      "diff",
      "dockerfile",
      "dot",
      "doxygen",
      "elixir",
      "elm",
      "embedded_template",
      "erlang",
      "fish",
      "gitattributes",
      "gitcommit",
      "git_config",
      "gitignore",
      "git_rebase",
      "go",
      "gomod",
      "gosum",
      "gowork",
      "gpg",
      "graphql",
      "groovy",
      "haskell",
      "haskell_persistent",
      "hcl",
      "html",
      "http",
      "hurl",
      "ini",
      "java",
      "javascript",
      "jq",
      "json",
      "json5",
      "latex",
      "llvm",
      "lua",
      "luadoc",
      "make",
      "markdown",
      "markdown_inline",
      "matlab",
      "mermaid",
      "ninja",
      "nix",
      "objc",
      "ocaml",
      "ocaml_interface",
      "ocamllex",
      "passwd",
      "pem",
      "perl",
      "php",
      "phpdoc",
      "prisma",
      "promql",
      "proto",
      "pug",
      "puppet",
      "python",
      "qmldir",
      "qmljs",
      "query",
      "r",
      "rasi",
      "regex",
      "rego",
      "requirements",
      "robot",
      "rst",
      "ruby",
      "rust",
      "scala",
      "scheme",
      "scss",
      "solidity",
      "sql",
      "squirrel",
      "ssh_config",
      "strace",
      "svelte",
      "swift",
      "systemtap",
      "terraform",
      "thrift",
      "toml",
      "tsv",
      "tsx",
      "typescript",
      "verilog",
      "vhs",
      "vim",
      "vimdoc",
      "vue",
      "xml",
      "yaml",
      "zig",
    },

    highlight = {
      enable = true,
      use_languagetree = true,
    },

    indent = { enable = true },
  },

  config = function(_, opts)
    require("nvim-treesitter.configs").setup(opts)
  end,
}
